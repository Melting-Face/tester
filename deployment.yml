# ConfigMap
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-config
data:
  POSTGRES_DB: airflow
  POSTGRES_PASSWORD: "1234"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: airflow-user
data:
  role: Admin
  username: admin
  email: admin@example.com
  firstName: admin
  lastName: user
  password: admin
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: airflow-connect
data:
  AIRFLOW__DATABASE__SQL_ALCHEMY_CONN:
    "postgresql+psycopg2://postgres:1234@postgres:5432/airflow"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: airflow-config
data:
  AIRFLOW_UID: "0"
  AIRFLOW__CORE__DAGS_FOLDER: /opt/airflow/dags
  AIRFLOW__CORE__EXECUTOR: KubernetesExecutor
# Job
---
apiVersion: batch/v1
kind: Job
metadata:
  name: airflow-user
spec:
  ttlSecondsAfterFinished: 300
  template:
    spec:
      restartPolicy: "Never"
      initContainers:
        - name: airflow-init
          image: apache/airflow
          command: ["bash", "-c"]
          args:
            - "airflow db migrate"
          envFrom:
            - configMapRef:
                name: airflow-connect
      containers:
        - name: airflow-user
          image: apache/airflow
          command: ["bash", "-c"]
          args:
            - "airflow users create -r $(role) -u $(username) -e $(email) -f $(firstName) -l $(lastName) -p $(password)"
          envFrom:
            - configMapRef:
                name: airflow-connect
            - configMapRef:
                name: airflow-user
# Deployment
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
  labels:
    app: postgres
spec:
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
        - name: postgres
          image: postgres:latest
          envFrom:
            - configMapRef:
                name: postgres-config
          ports:
            - containerPort: 5432
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: data
      volumes:
        - name: data
          hostPath:
            path: /host/data
            type: DirectoryOrCreate
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: airflow-webserver
  labels:
    app: airflow-webserver
spec:
  selector:
    matchLabels:
      app: airflow-webserver
  template:
    metadata:
      labels:
        app: airflow-webserver
    spec:
      containers:
        - name: airflow
          image: apache/airflow
          envFrom:
            - configMapRef:
                name: airflow-connect
            - configMapRef:
                name: airflow-config
          command: ["bash", "-c"]
          args:
            - "airflow webserver"
          ports:
            - containerPort: 8080
          volumeMounts:
            - mountPath: /opt/airflow/dags
              name: dags
      volumes:
        - name: dags
          hostPath:
            path: /host/dags
            type: Directory
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: airflow-scheduler
  labels:
    app: airflow-scheduler
spec:
  selector:
    matchLabels:
      app: airflow-scheduler
  template:
    metadata:
      labels:
        app: airflow-scheduler
    spec:
      containers:
        - name: airflow
          image: apache/airflow
          envFrom:
            - configMapRef:
                name: airflow-connect
            - configMapRef:
                name: airflow-config
          command: ["bash", "-c"]
          args:
            - "airflow scheduler"
          volumeMounts:
            - mountPath: /opt/airflow/dags
              name: dags
      volumes:
        - name: dags
          hostPath:
            path: /host/dags
            type: Directory
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: airflow-triggerer
  labels:
    app: airflow-triggerer
spec:
  selector:
    matchLabels:
      app: airflow-triggerer
  template:
    metadata:
      labels:
        app: airflow-triggerer
    spec:
      containers:
        - name: airflow
          image: apache/airflow
          envFrom:
            - configMapRef:
                name: airflow-connect
            - configMapRef:
                name: airflow-config
          command: ["bash", "-c"]
          args:
            - "airflow triggerer"
          volumeMounts:
            - mountPath: /opt/airflow/dags
              name: dags
      volumes:
        - name: dags
          hostPath:
            path: /host/dags
            type: Directory
# Services
---
apiVersion: v1
kind: Service
metadata:
  name: postgres
  labels:
    app: postgres
spec:
  ports:
    - port: 5432
  selector:
    app: postgres
---
apiVersion: v1
kind: Service
metadata:
  name: airflow-webserver
  labels:
    app: airflow-webserver
spec:
  ports:
    - port: 8080
  selector:
    app: airflow-webserver
